      PROGRAM JULIAN
C $Id: julia.for 181 2008-08-14 23:19:51Z tjansson $
C THE PROGRAM CONVERTS THE DATE AND TIME TO OR FROM THE JULIAN DATE OR THE MJD.
c PROGRAMMED BY C.C.TSCHERNING BASED ON MARTERIAL FROM M.VERMEER, 1992.
C LAST UPDATE 2000-05-09 BY CCT.
C Updated 1994.08.31 by MSS .. MJD now the one used by uk-paf in altwap products
C Update  1995.09.27 by MSS .. Option 3 now uses ers1 time since 1990 as this 
C is the standard adopted on the data CDROM's
c correction for year 2000 made 2002-06-24 by cct.
c
      IMPLICIT REAL*8 (A-H,O-Z), LOGICAL (L) 
      WRITE(*,*) ' PROGRAM JULIA, VER. 2000.05.09.'
      WRITE(*,200)
  200 FORMAT(' FROM DATE TO JULIAN DATE TYPE 1',/
     *' FROM JULIAN MODIFIED DATE TO DATE TYPE 2'/,
     *' FROM ERS-1 TIME (SEC SINCE 1990 01 01 0 0 0.0) TO DATE TYPE 3')
      READ(*,*)JULI
      GO TO (1100,1200,1300),JULI 
 1100 WRITE(*,*)' INPUT YYYY MM DD HH MM SS.SS'
      READ(*,*)JJ,MO,IDD,IHH,MI,SS
      CALL GETJUL(JJ,MO,IDD,IHH,MI,SS,EPOCH,EMJD) 
      WRITE(*,*)' JULIAN DATE', EPOCH 
      WRITE(*,*)' MODIFIED JULIAN DATE', EMJD  
      STIM=SIDTIME(EPOCH)
      ERS1T= EMJD+33282.0d0-46066.0d0
      ERS1S=ERS1T*86400.0d0 
      WRITE(*,*)' ERS1 TIME = ',ERS1S,', (SEC) '
      WRITE(*,*)' SIDERIAL TIME=', STIM ,', (RADIANS)' 
      if (.true.) then
      CALL GETJUL(2000,1,1,12,0,0.0d0,EPOCH0,EMJD)
      TU=(EPOCH-EPOCH0)/36525.0D0
      write(*,*)TU
      GMST=(6*60.0D0+41)*60.0D0+50.5481D0+8640182.812866D0*TU+
     *      0.093104*TU**2-6.2D-6*TU**3
      GDAY=GMST/86400.0D0
      GMST=GMST-GDAY*86400.0D0
      WRITE(*,*)' GMST= ',GMST
      end if

      STOP
C 
 1200 WRITE(*,*)' INPUT MODIFIED JULIAN DATE '
      READ(*,*)EMJD
      EPOCH=EMJD+33282.0d0+2400000.5d0 
      CALL RETJUL(JJ,MO,IDD,IHH,MI,SS,EPOCH) 
      IF (JJ.LT.1901.OR.JJ.GT.2099) WRITE(*,*)
     *' *** WARNING  *** CONVERSION OUT OF PRECISE RANGE '
      WRITE(*,100)JJ,MO,IDD,IHH,MI,SS 
  100 FORMAT(' DATE= ', I5,I3,I3,I3,I3,F8.3) 
      STOP 
 1300 WRITE(*,*)' INPUT ERS-1 TIME IN SEC '
      READ(*,*)ERS1S 
      ERS1T=(ERS1S+157766400)/86400.0+46066.0d0
      WRITE(*,*)' MODIFIED JULIAN DATE= ',ERS1T-33282.0d0 
      EPOCH=ERS1T+2400000.5d0 
      CALL RETJUL(JJ,MO,IDD,IHH,MI,SS,EPOCH) 
      IF (JJ.LT.1901.OR.JJ.GT.2099) WRITE(*,*)
     *' *** WARNING  *** CONVERSION OUT OF PRECISE RANGE '
      WRITE(*,100)JJ,MO,IDD,IHH,MI,SS 
      STOP
      END 
      DOUBLE PRECISION FUNCTION DJULIA(JJ,MO,DD) 
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER DD 
      LOGICAL LEAP
      COMMON /MONTH/MCAL(12)
      DATA MCAL/0,31,59,90,120,151,181,212,243,273,304,334/ 
      J19=JJ-1900
      NLEAP= J19/4
      LEAP= MOD(J19,4).EQ.0.AND.JJ.NE.2000
      DJULIA=15019.0D0+365.0D0*J19+MCAL(MO)+NLEAP+DD
      IF (LEAP.AND.MO.LT.3) DJULIA=DJULIA-1.0D0
      RETURN
      END 
      SUBROUTINE GETJUL(JJ,MO,DD,HOUR,MIN,SEC,EPOCH,DMJUL)
C THE ROUTINE COMPUTES JULIAN DATE. LAST UPDATE 1990.10.30. 
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER DD,HOUR
      IF (JJ.LT.1900) JJ=JJ+1900
      IF (JJ.LT.1957) JJ=JJ+100
      EP= DJULIA(JJ,MO,DD)
      DMJUL= EP+HOUR/24.0D0+MIN/1440D0+SEC/86400.0D0-33282.0d0
      EPOCH=DMJUL+2400000.5d0+33282.0d0 
      RETURN
      END
      DOUBLE PRECISION FUNCTION SIDTIME(TIME)
C THE FUNCTION COMPUTES THE HOUR ANGLE IN RADIANS.
C LAST UPDATE 1990.10.30. 
      IMPLICIT REAL *8 (A-H,O-Z)
      PI4=ATAN(1.0d0)
      PI2=8.0D0*PI4 
      JULIA0=(DJULIA(1994,4,1)-DJULIA(1973,3,21))*86400.0D0 
      ST= 3.3008134458717D0+(TIME-JULIA0)*7.29211585531D-5
      SIDTIME=MOD(ST,PI2) 
      IF (SIDTIME.LT.0.0D0) SIDTIME=SIDTIME+PI2 
      sidh=sidtime*24.0D0/pi2
      isidh=sidh
      sidm=sidh*60.0d0-isidh*60.0d0
      isidm=sidm
      sids=sidm*60.0d0-isidm*60.0d0
      write(*,971)isidh,isidm,sids
  971 format(i3,i3,f6.2)
C
      JULIA00=0
      RETURN
      END 
      SUBROUTINE RETJUL(JJ,MO,DD,HOUR,MIN,SEC,EPOCH)
C THE ROUTINE COMPUTES THE DATE FROM THE JULIAN DATE. 
C REF: HOFMANN-WELLLENHOF ET.AL: GPS THEORT & PRACTICE, 1992, p.35. 
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER DD,HOUR
      IA=INT(EPOCH+0.5)
      IB=IA+1537 
      IC=INT((IB-122.1)/365.25)
      ID=INT(365.25*IC)
      IE=INT((IB-ID)/30.6001)
      EPOCH5=EPOCH+0.5d0
      IEP=AINT(EPOCH5)
      FRAE=EPOCH5-IEP
      DD=IB-ID-INT(30.6001*IE)
      MO=IE-1-12*INT(IE/14)
      JJ=IC-4715-INT((7+MO)/10)
      HOUR=FRAE*24 
      MIN=(FRAE-HOUR/24.0)*60*24
      SEC=(FRAE-HOUR/24.0d0-MIN/(24.0d0*60d0))*(24d0*60*60) 
      RETURN
      END 
